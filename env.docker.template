# SarvanOM Docker Environment Configuration Template
# Copy this file to .env.docker and configure for Docker deployment

# =============================================================================
# CORE APPLICATION SETTINGS
# =============================================================================

# Environment
ENVIRONMENT=development
SERVICE_NAME=sarvanom-api
DEBUG=true
LOG_LEVEL=DEBUG

# Security (CHANGE THESE IN PRODUCTION!)
SECRET_KEY=your-super-secret-key-change-this-in-production
JWT_SECRET_KEY=your-jwt-secret-key-change-this-in-production

# =============================================================================
# DATABASE CONFIGURATION (Docker Services)
# =============================================================================

# PostgreSQL (Docker Service)
DATABASE_URL=postgresql://postgres:password@sarvanom-postgres:5432/sarvanom_db

# Redis (Docker Service)
REDIS_URL=redis://sarvanom-redis:6379/0

# =============================================================================
# VECTOR DATABASES & SEARCH (Docker Services)
# =============================================================================

# Qdrant Vector Database (Docker Service)
QDRANT_URL=http://sarvanom-qdrant:6333
QDRANT_API_KEY=

# Meilisearch (Docker Service)
MEILISEARCH_URL=http://sarvanom-meilisearch:7700
MEILI_MASTER_KEY=your-meilisearch-master-key

# ArangoDB (Docker Service)
ARANGODB_URL=http://sarvanom-arangodb:8529
ARANGODB_USERNAME=root
ARANGODB_PASSWORD=password
ARANGODB_DATABASE=knowledge_graph_dev

# =============================================================================
# AI/LLM PROVIDERS (ZERO BUDGET FIRST POLICY)
# =============================================================================

# Ollama (Docker Service)
OLLAMA_ENABLED=true
OLLAMA_BASE_URL=http://sarvanom-ollama:11434
OLLAMA_MODEL=llama3.2:3b

# HuggingFace (FREE Tier)
HUGGINGFACE_ENABLED=true
HUGGINGFACE_WRITE_TOKEN=your-huggingface-write-token
HUGGINGFACE_READ_TOKEN=your-huggingface-read-token

# OpenAI (PAID - Fallback)
OPENAI_API_KEY=your-openai-api-key
OPENAI_MODEL=gpt-4o-mini

# Anthropic (PAID - Fallback)
ANTHROPIC_API_KEY=your-anthropic-api-key
ANTHROPIC_MODEL=claude-3-haiku-20240307

# Google AI (PAID - Fallback)
GOOGLE_AI_API_KEY=your-google-ai-api-key
GOOGLE_AI_MODEL=gemini-1.5-flash

# =============================================================================
# FEATURE FLAGS & CONFIGURATION
# =============================================================================

# Zero Budget Policy
USE_DYNAMIC_SELECTION=true
PRIORITIZE_FREE_MODELS=true
FALLBACK_TO_PAID_MODELS=false

# Agent Configuration
AGENT_TIMEOUT_SECONDS=60
AGENT_MAX_RETRIES=5
AGENT_BACKOFF_FACTOR=1.5

# Query Processing
QUERY_CACHE_TTL_SECONDS=1800
QUERY_MAX_LENGTH=5000
QUERY_MIN_CONFIDENCE=0.5

# =============================================================================
# MONITORING & ANALYTICS
# =============================================================================

# Prometheus Metrics
METRICS_ENABLED=true
METRICS_PORT=9090

# Sentry (Optional)
SENTRY_DSN=
SENTRY_TRACES_SAMPLE_RATE=0.0
SENTRY_PROFILES_SAMPLE_RATE=0.0

# =============================================================================
# SECURITY & CORS
# =============================================================================

# CORS Origins (Docker Network)
CORS_ORIGINS=http://localhost:3000,http://localhost:8004,http://127.0.0.1:3000

# Rate Limiting
RATE_LIMIT_PER_MINUTE=1000
MAX_REQUEST_SIZE_MB=50

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

# Development Features
SKIP_AUTHENTICATION=true
ENABLE_DEBUG_ENDPOINTS=true
AUTO_RELOAD=true
TEST_MODE=false
MOCK_PROVIDERS=false

# Session Management
SESSION_TTL_SECONDS=3600
CACHE_TTL_SECONDS=1800

# =============================================================================
# WORKER & PERFORMANCE
# =============================================================================

# Worker Configuration
WORKER_PROCESSES=1
WORKER_THREADS=2
MAX_MEMORY_USAGE_MB=1024

# Database Pool
DB_POOL_SIZE=3
DB_MAX_OVERFLOW=5
DB_POOL_TIMEOUT=20

# =============================================================================
# FEATURE TOGGLES
# =============================================================================

# Core Features
FEATURE_STREAMING=true
FEATURE_BATCH_PROCESSING=true
FEATURE_WEBSOCKETS=true
FEATURE_GRAPHQL=true
FEATURE_ADMIN_PANEL=true
FEATURE_EXPERT_REVIEW=true
FEATURE_REAL_TIME_COLLABORATION=true
FEATURE_ADVANCED_ANALYTICS=true
FEATURE_MULTI_TENANT=true
FEATURE_SSO=false

# =============================================================================
# EXTERNAL SERVICES (Optional)
# =============================================================================

# Email Service (Optional)
SMTP_HOST=
SMTP_PORT=587
SMTP_USERNAME=
SMTP_PASSWORD=
SMTP_FROM_EMAIL=

# File Storage (Optional)
STORAGE_TYPE=local
STORAGE_PATH=./uploads
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_REGION=
AWS_S3_BUCKET=

# =============================================================================
# TESTING & DEVELOPMENT
# =============================================================================

# Test Configuration
TEST_DATABASE_URL=sqlite:///test.db
TEST_REDIS_URL=redis://sarvanom-redis:6379/1

# Mock Services
MOCK_AI_RESPONSES=false
MOCK_DATABASE=false
MOCK_EXTERNAL_APIS=false

# =============================================================================
# DEPLOYMENT & INFRASTRUCTURE
# =============================================================================

# Port Configuration
GATEWAY_PORT=8004
AUTH_PORT=8001
SEARCH_PORT=8002
SYNTHESIS_PORT=8003
FACTCHECK_PORT=8005
ANALYTICS_PORT=8006

# Health Check
HEALTH_CHECK_INTERVAL=60
HEALTH_CHECK_TIMEOUT=10

# =============================================================================
# DOCKER-SPECIFIC SETTINGS
# =============================================================================

# Docker Network
DOCKER_NETWORK=sarvanom-network

# Data Volumes
DATA_VOLUME_PATH=./data

# Container Names
POSTGRES_CONTAINER=sarvanom-postgres
REDIS_CONTAINER=sarvanom-redis
QDRANT_CONTAINER=sarvanom-qdrant
MEILISEARCH_CONTAINER=sarvanom-meilisearch
ARANGODB_CONTAINER=sarvanom-arangodb
OLLAMA_CONTAINER=sarvanom-ollama

# =============================================================================
# NOTES
# =============================================================================

# 1. This file is for Docker deployment - services use container names
# 2. For production, change all default passwords and secrets
# 3. Configure proper CORS origins for your domain
# 4. Set up proper monitoring and logging
# 5. Use environment-specific configurations
# 6. Never commit .env.docker files to version control
# 7. Docker services are accessible via container names in the network
