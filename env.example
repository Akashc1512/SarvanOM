# =============================================================================
# Universal Knowledge Platform - Environment Configuration Template
# =============================================================================
# 
# This is a template file showing ALL environment variables used by the platform.
# Copy this file to .env and fill in your actual values.
# 
# ‚ö†Ô∏è  SECURITY WARNING: NEVER commit .env files to version control!
# .env files contain sensitive secrets and should be kept private.
#
# üöÄ Quick Start:
#   1. Copy this file: cp env.example .env
#   2. Fill in your actual values (replace all "your_*_here" placeholders)
#   3. Generate secure secrets where indicated
#   4. Restart your application
#
# üìã Environment-Specific Notes:
#   - Development: Many values have safe defaults
#   - Testing: Use mock/test values  
#   - Staging/Production: ALL values MUST be properly configured
#
# =============================================================================

# =============================================================================
# 1. CORE APPLICATION SETTINGS (REQUIRED)
# =============================================================================

# Environment: development, testing, staging, production
# This determines which config file is loaded and what features are enabled
APP_ENV=development

# Application metadata
APP_NAME="Universal Knowledge Platform"
APP_VERSION=1.0.0
APP_DOMAIN=localhost
SERVICE_NAME=sarvanom

# Logging configuration
LOG_LEVEL=DEBUG
DEBUG=true

# Advanced logging settings (optional in development)
LOG_FORMAT=text
# LOG_FILE=/var/log/sarvanom/app.log  # Uncomment to enable file logging
LOG_MAX_FILE_SIZE_MB=100
LOG_BACKUP_COUNT=5

# =============================================================================
# 2. SECURITY CONFIGURATION (CRITICAL - REQUIRED FOR PRODUCTION)
# =============================================================================

# JWT Secret Key (REQUIRED for staging/production)
# üîê GENERATE: openssl rand -hex 32
# üîê GENERATE: python -c "import secrets; print(secrets.token_hex(32))"
JWT_SECRET_KEY=your_jwt_secret_key_here_CHANGE_THIS_IN_PRODUCTION

# CORS Configuration
# Development: Allow local development servers
CORS_ORIGINS=http://localhost:3000,http://localhost:8000,http://127.0.0.1:3000,http://127.0.0.1:8000

# Security Features (adjust per environment)
SECURITY_HEADERS_ENABLED=false

# =============================================================================
# 3. DATABASE CONFIGURATION (REQUIRED FOR STAGING/PRODUCTION)
# =============================================================================

# Primary Database (PostgreSQL recommended for production)
# Development: sqlite:///dev.db (default, no setup required)
# Production: postgresql://username:password@host:port/database
# DATABASE_URL=sqlite:///dev.db  # Default for development
# DATABASE_URL=postgresql://user:password@localhost:5432/sarvanom

# Redis Cache (required for staging/production)
# Development: redis://localhost:6379/0 (default)
# Production: redis://user:password@host:port/db
# REDIS_URL=redis://localhost:6379/0

# =============================================================================
# 4. AI PROVIDER CONFIGURATION (REQUIRED FOR PRODUCTION FEATURES)
# =============================================================================

# OpenAI Configuration (recommended primary provider)
# üîê Get from: https://platform.openai.com/api-keys
# OPENAI_API_KEY=sk-your_openai_api_key_here
OPENAI_MODEL=gpt-4
OPENAI_MAX_TOKENS=2000
OPENAI_TEMPERATURE=0.7

# Anthropic Configuration (alternative provider)
# üîê Get from: https://console.anthropic.com/
# ANTHROPIC_API_KEY=your_anthropic_api_key_here
ANTHROPIC_MODEL=claude-3-sonnet-20240229
ANTHROPIC_MAX_TOKENS=2000

# =============================================================================
# 5. VECTOR DATABASE CONFIGURATION (REQUIRED FOR SEARCH)
# =============================================================================

# Qdrant Vector Database
# Development: http://localhost:6333 (default)
# Production: Configure with authentication
VECTOR_DB_URL=http://localhost:6333
# VECTOR_DB_API_KEY=your_qdrant_api_key_here

# =============================================================================
# 6. SEARCH CONFIGURATION (REQUIRED FOR CONTENT SEARCH)
# =============================================================================

# Meilisearch Configuration
# Development: http://localhost:7700 (default)
# Production: Configure with master key
MEILISEARCH_URL=http://localhost:7700
# üîê REQUIRED for production: Generate a secure master key
# MEILISEARCH_MASTER_KEY=your_meilisearch_master_key_here

# =============================================================================
# 7. KNOWLEDGE GRAPH CONFIGURATION (REQUIRED FOR GRAPH FEATURES)
# =============================================================================

# ArangoDB Configuration
# Development: http://localhost:8529 (default)
# Production: Configure with authentication
ARANGODB_URL=http://localhost:8529
ARANGODB_USERNAME=root
# ARANGODB_PASSWORD=your_arangodb_password_here
ARANGODB_DATABASE=knowledge_graph

# =============================================================================
# 8. MONITORING & OBSERVABILITY (OPTIONAL BUT RECOMMENDED)
# =============================================================================

# Metrics and Monitoring
METRICS_ENABLED=true
METRICS_PORT=9090

# Distributed Tracing (optional)
ENABLE_TRACING=false
JAEGER_AGENT_HOST=localhost
JAEGER_AGENT_PORT=6831

# Error Tracking (optional but recommended for production)
# üîê Get from: https://sentry.io/
# SENTRY_DSN=your_sentry_dsn_here
SENTRY_TRACES_SAMPLE_RATE=0.1
SENTRY_PROFILES_SAMPLE_RATE=0.1

# =============================================================================
# 9. PERFORMANCE & SCALING CONFIGURATION
# =============================================================================

# Rate Limiting
RATE_LIMIT_PER_MINUTE=1000
MAX_REQUEST_SIZE_MB=50

# Caching
CACHE_TTL_SECONDS=1800
SESSION_TTL_SECONDS=3600

# Database Connection Pooling
DB_POOL_SIZE=5
DB_MAX_OVERFLOW=10
DB_POOL_TIMEOUT=30

# Worker Configuration
WORKER_PROCESSES=2
WORKER_THREADS=4
MAX_MEMORY_USAGE_MB=1024

# Agent Configuration
AGENT_TIMEOUT_SECONDS=60
AGENT_MAX_RETRIES=3
AGENT_BACKOFF_FACTOR=2.0

# Query Configuration
QUERY_CACHE_TTL_SECONDS=1800
QUERY_MAX_LENGTH=5000
QUERY_MIN_CONFIDENCE=0.5

# =============================================================================
# 10. FEATURE FLAGS (DEVELOPMENT/TESTING)
# =============================================================================

# Development Features (disable in production)
MOCK_AI_RESPONSES=true
SKIP_AUTHENTICATION=true
ENABLE_DEBUG_ENDPOINTS=true
AUTO_RELOAD=true
TEST_MODE=false
MOCK_PROVIDERS=true

# Production Features
BACKUP_ENABLED=false
AUDIT_LOG_ENABLED=true

# =============================================================================
# 11. EXTERNAL SERVICE INTEGRATIONS (OPTIONAL)
# =============================================================================

# Web Search APIs (for enhanced search capabilities)
# üîê Get from: https://api.search.brave.com/
# BRAVE_SEARCH_API_KEY=your_brave_search_api_key_here

# üîê Get from: https://serpapi.com/
# SERPAPI_KEY=your_serpapi_key_here

# üîê Get from: https://www.searchapi.io/
# SEARCHAPI_KEY=your_searchapi_key_here

# Email Service (for notifications)
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USER=your_email@gmail.com
# SMTP_PASSWORD=your_email_password_here
# SMTP_USE_TLS=true

# =============================================================================
# 12. DEVELOPMENT-SPECIFIC SETTINGS
# =============================================================================

# Hot Reloading (development only)
DEV_HOT_RELOAD=true
DEV_DEBUG_SQL=false
DEV_SHOW_ERROR_DETAILS=true
DEV_MOCK_EXTERNAL_APIS=true
DEV_BYPASS_RATE_LIMITS=true

# =============================================================================
# 13. ADVANCED CONFIGURATION (OPTIONAL)
# =============================================================================

# Health Check Configuration
HEALTH_CHECK_INTERVAL=60
HEALTH_CHECK_TIMEOUT=10

# Garbage Collection
GARBAGE_COLLECTION_INTERVAL=300

# Advanced Security (production)
IP_WHITELIST_ENABLED=false
DDOS_PROTECTION_ENABLED=false
MAINTENANCE_MODE=false

# Backup Configuration
BACKUP_RETENTION_DAYS=30
LOG_RETENTION_DAYS=30

# =============================================================================
# 14. SECRET MANAGEMENT (ADVANCED)
# =============================================================================

# Secret Vault Configuration (optional)
SECRET_VAULT_TYPE=environment
# SECRET_VAULT_URL=your_vault_url_here
# SECRET_VAULT_TOKEN=your_vault_token_here
SECRET_PREFIX=SARVANOM_

# =============================================================================
# ENVIRONMENT-SPECIFIC EXAMPLES
# =============================================================================

# üîß DEVELOPMENT SETUP (copy this section to your .env):
# APP_ENV=development
# DEBUG=true
# LOG_LEVEL=DEBUG
# JWT_SECRET_KEY=dev-secret-key-not-for-production
# MOCK_AI_RESPONSES=true
# SKIP_AUTHENTICATION=true

# üß™ TESTING SETUP:
# APP_ENV=testing
# DEBUG=false
# LOG_LEVEL=WARNING
# JWT_SECRET_KEY=test-secret-key
# MOCK_AI_RESPONSES=true
# TEST_MODE=true

# üöÄ PRODUCTION SETUP (ALL VALUES MUST BE PROPERLY CONFIGURED):
# APP_ENV=production
# DEBUG=false
# LOG_LEVEL=WARNING
# JWT_SECRET_KEY=<GENERATE_SECURE_KEY>
# DATABASE_URL=postgresql://...
# REDIS_URL=redis://...
# OPENAI_API_KEY=sk-...
# MEILISEARCH_MASTER_KEY=<GENERATE_SECURE_KEY>
# All other production secrets...

# =============================================================================
# END OF CONFIGURATION TEMPLATE
# =============================================================================

# 
# üìù Quick Setup Instructions:
# 1. For development: Set APP_ENV=development and fill in OpenAI/Anthropic keys
# 2. For testing: Set APP_ENV=testing and use mock values
# 3. For production: Set APP_ENV=production and configure ALL required secrets
# 
# üîê Security Reminder: Never commit .env files with real secrets!

# =============================================================================
# CONFIGURATION VALIDATION & TESTING
# =============================================================================

# To verify your configuration is correct, run:
# python scripts/verify_env_config.py

# To test environment switching:
# APP_ENV=development python -c "from shared.core.config.enhanced_environment_manager import get_enhanced_environment_manager; print(get_enhanced_environment_manager().environment.value)"

# =============================================================================
# SECURITY NOTES
# =============================================================================

# 1. ‚ö†Ô∏è  NEVER commit .env files to version control
# 2. üîê Use strong, unique secrets for production  
# 3. üîÑ Rotate secrets regularly (every 90 days recommended)
# 4. üõ°Ô∏è  Use environment-specific secret management in production
# 5. üìä Monitor configuration access and changes

# =============================================================================
# END OF ENVIRONMENT CONFIGURATION TEMPLATE
# =============================================================================
# TROUBLESHOOTING
# =============================================================================

# Common issues:
# 1. "Missing critical configuration" -> Check required environment variables above
# 2. "Invalid environment" -> Ensure APP_ENV is one of: development, testing, staging, production
# 3. "Database connection failed" -> Verify DATABASE_URL and ensure database is running
# 4. "Redis connection failed" -> Verify REDIS_URL and ensure Redis is running
# 5. "Meilisearch connection failed" -> Verify MEILISEARCH_URL and MEILISEARCH_MASTER_KEY

# For more help, see: documentation/CONFIGURATION_MANAGEMENT_GUIDE.md

# =============================================================================
# 12. CACHE CONFIGURATION (PERFORMANCE OPTIMIZATION)
# =============================================================================

# Global cache settings
CACHE_ENABLED=true
CACHE_BACKEND=memory  # memory, redis, or disabled
CACHE_DEFAULT_TTL_SECONDS=300
CACHE_MAX_MEMORY_MB=500
CACHE_CLEANUP_INTERVAL_SECONDS=60
CACHE_METRICS_ENABLED=true
CACHE_DEBUG_MODE=false

# Redis cache backend (if using CACHE_BACKEND=redis)
# REDIS_URL=redis://localhost:6379
# REDIS_DB=0
# REDIS_PASSWORD=your_redis_password_here

# Cache level configurations
# Query results cache (faster response for repeated queries)
CACHE_QUERY_RESULTS_ENABLED=true
CACHE_QUERY_RESULTS_TTL_SECONDS=600
CACHE_QUERY_RESULTS_MAX_SIZE=500
CACHE_QUERY_RESULTS_MAX_MEMORY_MB=100
CACHE_QUERY_RESULTS_SIMILARITY_THRESHOLD=0.95

# Embeddings cache (reduce API calls for vector operations)
CACHE_EMBEDDINGS_ENABLED=true
CACHE_EMBEDDINGS_TTL_SECONDS=3600
CACHE_EMBEDDINGS_MAX_SIZE=2000
CACHE_EMBEDDINGS_MAX_MEMORY_MB=150
CACHE_EMBEDDINGS_SIMILARITY_THRESHOLD=0.99

# Knowledge graph cache (faster graph queries)
CACHE_KNOWLEDGE_GRAPH_ENABLED=true
CACHE_KNOWLEDGE_GRAPH_TTL_SECONDS=900
CACHE_KNOWLEDGE_GRAPH_MAX_SIZE=1000
CACHE_KNOWLEDGE_GRAPH_MAX_MEMORY_MB=80
CACHE_KNOWLEDGE_GRAPH_SIMILARITY_THRESHOLD=0.95

# LLM responses cache (reduce expensive AI model calls)
CACHE_LLM_RESPONSES_ENABLED=true
CACHE_LLM_RESPONSES_TTL_SECONDS=300
CACHE_LLM_RESPONSES_MAX_SIZE=200
CACHE_LLM_RESPONSES_MAX_MEMORY_MB=50
CACHE_LLM_RESPONSES_SIMILARITY_THRESHOLD=0.98

# Vector search cache (faster similarity searches)
CACHE_VECTOR_SEARCH_ENABLED=true
CACHE_VECTOR_SEARCH_TTL_SECONDS=600
CACHE_VECTOR_SEARCH_MAX_SIZE=1000
CACHE_VECTOR_SEARCH_MAX_MEMORY_MB=120
CACHE_VECTOR_SEARCH_SIMILARITY_THRESHOLD=0.96

# Document content cache (reduce document processing)
CACHE_DOCUMENT_CONTENT_ENABLED=true
CACHE_DOCUMENT_CONTENT_TTL_SECONDS=1800
CACHE_DOCUMENT_CONTENT_MAX_SIZE=500
CACHE_DOCUMENT_CONTENT_MAX_MEMORY_MB=80
CACHE_DOCUMENT_CONTENT_SIMILARITY_THRESHOLD=0.99

# Synthesis results cache (faster answer generation)
CACHE_SYNTHESIS_RESULTS_ENABLED=true
CACHE_SYNTHESIS_RESULTS_TTL_SECONDS=600
CACHE_SYNTHESIS_RESULTS_MAX_SIZE=300
CACHE_SYNTHESIS_RESULTS_MAX_MEMORY_MB=60
CACHE_SYNTHESIS_RESULTS_SIMILARITY_THRESHOLD=0.97

# Fact check results cache (faster fact verification)
CACHE_FACT_CHECK_RESULTS_ENABLED=true
CACHE_FACT_CHECK_RESULTS_TTL_SECONDS=900
CACHE_FACT_CHECK_RESULTS_MAX_SIZE=400
CACHE_FACT_CHECK_RESULTS_MAX_MEMORY_MB=40
CACHE_FACT_CHECK_RESULTS_SIMILARITY_THRESHOLD=0.96

# =============================================================================
# CACHE PERFORMANCE NOTES
# =============================================================================

# Cache Benefits:
# - Faster response times for repeated queries (5-50x speed improvement)
# - Reduced API calls to expensive services (OpenAI, vector databases)
# - Lower latency for knowledge graph and document operations
# - Better user experience with near-instant responses for cached content

# Memory vs Redis Backend:
# - Memory: Faster access, lost on restart, single-server only
# - Redis: Persistent, distributed, shared across multiple instances

# Performance Tuning:
# - Increase TTL for stable content (embeddings, documents)
# - Decrease TTL for dynamic content (LLM responses, query results)
# - Adjust memory limits based on available system resources
# - Monitor hit rates and adjust similarity thresholds accordingly

# Development vs Production:
# - Development: Use memory backend with shorter TTLs for testing
# - Production: Use Redis backend with longer TTLs for performance
# - Enable debug mode in development for cache behavior analysis