version: '3.8'

services:
  # SarvanOM Backend - FastAPI Application
  sarvanom_backend:
    build:
      context: .
      dockerfile: Dockerfile.enterprise
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - LOG_LEVEL=INFO
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/sarvanom_db
      - REDIS_URL=redis://redis:6379/0
      - MEILISEARCH_URL=http://meilisearch:7700
      - ARANGODB_URL=http://arangodb:8529
      - QDRANT_URL=http://qdrant:6333
      - OLLAMA_BASE_URL=http://ollama:11434
      - OLLAMA_MODEL=llama3.2:3b
    volumes:
      - ./:/app
      - /app/__pycache__
      - /app/.pytest_cache
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      meilisearch:
        condition: service_healthy
      arangodb:
        condition: service_healthy
      qdrant:
        condition: service_healthy
      ollama:
        condition: service_healthy
    networks:
      - sarvanom-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/basic"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Ollama - Local LLM Service
  ollama:
    image: ollama/ollama:latest
    container_name: sarvanom-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
    networks:
      - sarvanom-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Meilisearch - Search Engine
  meilisearch:
    image: getmeili/meilisearch:latest
    container_name: sarvanom-meilisearch
    ports:
      - "7700:7700"
    environment:
      - MEILI_MASTER_KEY=sarvanom-master-key-2024
      - MEILI_ENV=development
    volumes:
      - meilisearch_data:/meili_data
    networks:
      - sarvanom-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7700/version"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # ArangoDB - Knowledge Graph Database
  arangodb:
    image: arangodb:3.12.5
    container_name: sarvanom-arangodb
    ports:
      - "8529:8529"
    environment:
      - ARANGO_ROOT_PASSWORD=sarvanom-root-password-2024
      - ARANGO_DB_NAME=sarvanom_kg
      - ARANGO_USER=sarvanom_user
      - ARANGO_PASSWORD=sarvanom-user-password-2024
    volumes:
      - arangodb_data:/var/lib/arangodb3
      - arangodb_apps_data:/var/lib/arangodb3-apps
    networks:
      - sarvanom-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8529/_api/version"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # PostgreSQL - Primary Database
  postgres:
    image: postgres:15-alpine
    container_name: sarvanom-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=sarvanom_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - sarvanom-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d sarvanom_db"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Qdrant - Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    container_name: sarvanom-qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - sarvanom-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Redis - Caching and Session Storage
  redis:
    image: redis:7-alpine
    container_name: sarvanom-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - sarvanom-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

volumes:
  ollama_data:
    driver: local
  meilisearch_data:
    driver: local
  arangodb_data:
    driver: local
  arangodb_apps_data:
    driver: local
  postgres_data:
    driver: local
  qdrant_data:
    driver: local
  redis_data:
    driver: local

networks:
  sarvanom-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 